---
title: "Introduction and Finding Help"
format:
  revealjs: 
    theme: dark
---

## Learning objectives: {.unnumbered}

After today's session, you will be able to...

-   Describe a *typical* data science project.
-   Explain the reasoning behind the order of content in this course.
-   Recognize topics that are not covered by this course.
-   Set up an environment in which you can learn the topics in this course.
-   Describe how code in the slides/book differs from code in your console.

## A typical data science project {.unnumbered}

![](images/data-science.png){fig-align="center" width="75%"}

## A typical data science project {.unnumbered}

-   **Importing** + **tidying** = **wrangling** data
-   **Understanding** = cycle of **transforming, visualizing, modeling**
-   **Communicating** your results to other humans
-   **Programming** aids entire process
    -   Automate common tasks
    -   Solve new problems with greater ease.

## Import the data {.unnumbered}

-   **Import:** (file, database, web app) ➡️ R
    -   Can't data science it 'til it's in R!

## Wrangle the data {.unnumbered}

-   🤠 Tidying + transforming = ***wrangling***
    -   🥊 Making data usable often feels like a fight.
-   **Tidy:** Consistent structure makes everything easier
    -   ↕↕↕️ Columns = variables
    -   ↔️ Rows = observations
-   **Transform:** Further refinement
    -   Filter (narrow in)
    -   Mutate (create new variables)
    -   Summarize (calculate things for groups)

## Understand & communicate {.unnumbered}

-   **Visualize:**
    -   Good dataviz can help find unexpected + raise new questions
    -   [ggplot2 book](http://ggplot2-book.org/) has more in-depth details
-   **Communicate:**
    -   Critical part of DS!
    -   It doesn't matter how good your models are if nobody knows about them.
    -   ***Note:*** R4DS 2e focuses on [Quarto](https://quarto.org/), vs [RMarkdown](https://rmarkdown.rstudio.com/) in 1e

## The order of content in this class {.unnumbered}

-   **Import** & **Tidy** = 😴
    -   So jump to 📈 **Visualization** & 🔁 **Transformation**
    -   *Then* **wrangle,** cuz necessary
-   **Programming** next
    -   Helps simplify other steps
-   Each chapter has **motivating examples**
    -   Bigger picture before details
-   **Homeworks** woven in for practice

## Not covered by this class {.unnumbered}

-   **Big data:** Problem-specific
    -   If you work with big data, will want to learn other tools
    -   [{sparklyr}](https://therinspark.com/) builds on principles in this book
-   **Other programming languages:** (Python, Julia, etc.)
    -   Master 1 tool at a time
    -   Maybe go on to other tools later

## Prerequisites {.unnumbered}

-   Numeric literacy
-   Basic programming skills (but ok if you're brand new)
    -   [Hands on Programming with R](https://rstudio-education.github.io/hopr/) by Garrett Grolemund = useful corequisite for this book
-   [**Posit Cloud:**](https://posit.cloud/) integrated development environment (IDE) for R (and others)
    -   A useful [cheat sheet](https://rstudio.github.io/cheatsheets/html/rstudio-ide.html) for RStudio

## Prerequisites: Install these packages (we will do this in class) {.unnumbered}

-   📦 = collection of functions, data, & documentation
-   The [**tidyverse**](https://tidyverse.tidyverse.org/) = 📦📦📦📦📦📦📦📦📦
    -   Shared philosophy (concept of this book)
    -   `install.packages("tidyverse")`
        -   [`dplyr`](https://dplyr.tidyverse.org/), [`forcats`](https://forcats.tidyverse.org/), [`ggplot2`](https://ggplot2.tidyverse.org/), [`lubridate`](https://github.com/tidyverse/lubridate), [`purrr`](https://purrr.tidyverse.org/), [`readr`](https://readr.tidyverse.org/), [`stringr`](https://stringr.tidyverse.org/), [`tibble`](https://tibble.tidyverse.org/), [`tidyr`](https://tidyr.tidyverse.org/)

## Prerequisites: Install these packages (we will do this in class)

-   Additional packages which provide interesting datasets
    -   When you see `Error in library(ggrepel) : there is no package called ‘ggrepel’`,
    -   Run `install.packages("ggrepel")`

## Conventions within the book: #\> {.unnumbered}

Code in book slightly different from output you'll see

-   `#>` in book = `>` in RStudio

    -   `#` = comment
    -   Can copy/paste code from book to console

    ```{r}
    #| eval: false
    #| echo: true
    1 + 2
    #> [1] 3
    ```

## Conventions within the slides: Code {.unnumbered}

-   Functions = `code font` + `()`
    -   `sum()` or `mean()`
-   Other R objects = `code font`
    -   `flights` or `x`
-   `dplyr::filter()` = "dplyr's filter"

## Bonus: Resources for getting help {.unnumbered}

-   **Pay attention to error messages.**
    -   Tidyverse error messages are often helpful
    -   If not enough, copy/paste into Google
-   **Stackoverflow.com** *can* also be helpful, but beware.
-   The [**Data Science Learning Community**](dslc.io/join) is a friendly Slack community with volunteer R tutors
    -   Navigate to [dslc.io/join](dslc.io/join) to request access to our Slack
    -   If expired, email [rfordatasci\@gmail.com](mailto:rfordatasci@gmail.com)

## Bonus: Reproducible examples {.unnumbered}

-   Make a [**reprex**](https://reprex.tidyverse.org/) ("reproducible example")
    -   State what *packages* you use
        -   `library(dplyr)`, etc
    -   Provide (a subset of) any data you use with [`dput()`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/dput)
    -   Try to make your code *easy to read* (clean spacing, clear variable names, comments)
